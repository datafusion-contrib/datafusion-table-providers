---
name: pr

on:
  pull_request:
    branches:
      - main
      - spiceai

jobs:
  lint:
    name: Clippy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - run: cargo clippy --all-features -- -D warnings

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      # Putting this into a GitHub Actions matrix will run a separate job per matrix item, whereas in theory
      # this can re-use the existing build cache to go faster.
      - name: Build without default features
        run: cargo check --no-default-features

      - name: Build with only duckdb
        run: cargo check --no-default-features --features duckdb

      - name: Build with only postgres
        run: cargo check --no-default-features --features postgres

      - name: Build with only sqlite
        run: cargo check --no-default-features --features sqlite

      - name: Build with only mysql
        run: cargo check --no-default-features --features mysql

      - name: Build with only flight
        run: cargo check --no-default-features --features flight

  integration-test:
    name: Tests
    runs-on: ubuntu-latest

    env:
      PG_DOCKER_IMAGE: ghcr.io/cloudnative-pg/postgresql:16-bookworm
      MYSQL_DOCKER_IMAGE: ghcr.io/mirrorshub/docker/mysql:8-debian

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - name: Pull the Postgres/MySQL images
        run: |
          docker pull ${{ env.PG_DOCKER_IMAGE }}
          docker pull ${{ env.MYSQL_DOCKER_IMAGE }}

      - name: Free Disk Space
        run: |
          sudo docker rmi $(docker image ls -aq) >/dev/null 2>&1 || true
          sudo rm -rf \
            /usr/share/dotnet /usr/local/lib/android /opt/ghc \
            /usr/local/share/powershell /usr/share/swift /usr/local/.ghcup \
            /usr/lib/jvm || true
          echo "some directories deleted"
          sudo apt install aptitude -y >/dev/null 2>&1
          sudo aptitude purge aria2 ansible azure-cli shellcheck rpm xorriso zsync \
            esl-erlang firefox gfortran-8 gfortran-9 google-chrome-stable \
            google-cloud-sdk imagemagick \
            libmagickcore-dev libmagickwand-dev libmagic-dev ant ant-optional kubectl \
            mercurial apt-transport-https mono-complete libmysqlclient \
            unixodbc-dev yarn chrpath libssl-dev libxft-dev \
            libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev \
            snmp pollinate libpq-dev postgresql-client powershell ruby-full \
            sphinxsearch subversion mongodb-org azure-cli microsoft-edge-stable \
            -y -f >/dev/null 2>&1
          sudo aptitude purge google-cloud-sdk -f -y >/dev/null 2>&1
          sudo aptitude purge microsoft-edge-stable -f -y >/dev/null 2>&1 || true
          sudo apt purge microsoft-edge-stable -f -y >/dev/null 2>&1 || true
          sudo aptitude purge '~n ^php' -f -y >/dev/null 2>&1
          sudo aptitude purge '~n ^dotnet' -f -y >/dev/null 2>&1
          sudo apt-get autoremove -y >/dev/null 2>&1
          sudo apt-get autoclean -y >/dev/null 2>&1
          echo "some packages purged"
          df -h

      - name: Run tests
        run: make test
