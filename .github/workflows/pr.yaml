---
name: pr

on:
  pull_request:
    branches:
      - main
      - spiceai

jobs:
  lint:
    name: Clippy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - run: cargo clippy --all-features -- -D warnings

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      # Putting this into a GitHub Actions matrix will run a separate job per matrix item, whereas in theory
      # this can re-use the existing build cache to go faster.
      - name: Build without default features
        run: cargo check --no-default-features

      - name: Build with only duckdb
        run: cargo check --no-default-features --features duckdb

      - name: Build with only postgres
        run: cargo check --no-default-features --features postgres

      - name: Build with only sqlite
        run: cargo check --no-default-features --features sqlite

      - name: Build with only mysql
        run: cargo check --no-default-features --features mysql

  integration-test-mysql:
    name: Tests mysql
    runs-on: ubuntu-latest

    env:
      MYSQL_DOCKER_IMAGE: public.ecr.aws/ubuntu/mysql:8.0-22.04_beta

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - name: Pull the MySQL images
        run: |
          docker pull ${{ env.MYSQL_DOCKER_IMAGE }}

      - uses: ./.github/actions/setup-integration-test

      - name: Run tests
        run: cargo test --features mysql

  integration-test-postgres:
    name: Tests postgres
    runs-on: ubuntu-latest

    env:
      PG_DOCKER_IMAGE: ghcr.io/cloudnative-pg/postgresql:16-bookworm

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - name: Pull the Postgres images
        run: |
          docker pull ${{ env.PG_DOCKER_IMAGE }}

      - uses: ./.github/actions/setup-integration-test

      - name: Run tests
        run: cargo test --features postgres

  integration-test-sqlite:
    name: Tests sqlite
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - uses: ./.github/actions/setup-integration-test

      - name: Run tests
        run: cargo test --features sqlite

  integration-test-duckdb:
    name: Tests duckdb
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - uses: ./.github/actions/setup-integration-test

      - name: Run tests
        run: cargo test --features duckdb

  integration-test-flight:
    name: Tests flight
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - uses: ./.github/actions/setup-integration-test

      - name: Run tests
        run: cargo test --features flight

  integration-test-mongodb:
    name: Tests flight
    runs-on: ubuntu-latest

    env:
      MONGODB_DOCKER_IMAGE: public.ecr.aws/docker/library/mongo:7

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - name: Pull the MongoDB images
        run: |
          docker pull ${{ env.MONGODB_DOCKER_IMAGE }}

      - uses: ./.github/actions/setup-integration-test

      - name: Run tests
        run: cargo test --features flight
